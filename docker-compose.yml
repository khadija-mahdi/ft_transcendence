services:
  nginx:
    restart: always
    container_name: nginx
    build:
      context: ./nginx
    networks:
      - mynetwork
    ports:
      - "8022:8022"
      - "4433:4433"
    depends_on:
      - frontend
      - backend

  frontend:
    restart: always
    container_name: frontend
    build:
      context: ./frontend/build-tools
    networks:
      - mynetwork
    volumes:
      - ./frontend:/var/www/html
    env_file:
      - .env
    depends_on:
      - backend

  backend:
    restart: always
    container_name: backend
    build:
      context: ./backend/build-tools
    command: [ "python3", "manage.py", "runserver", "0.0.0.0:8000" ]
    networks:
      - mynetwork
    volumes:
      - ./backend:/var/app
    env_file:
      - .env
    depends_on:
      - db
      - redis

  redis:
    restart: always
    container_name: redis
    build:
      context: ./redis
    networks:
      - mynetwork
    env_file:
      - .env

  db:
    image: postgres
    restart: always
    shm_size: 128mb
    networks:
      - mynetwork
    volumes:
      - db_volume:/var/lib/postgresql/data
    env_file:
      - .env

  adminer:
    image: adminer
    restart: always
    networks:
      - mynetwork
    depends_on:
      - db

volumes:
  db_volume:

networks:
  mynetwork:
    driver: bridge
