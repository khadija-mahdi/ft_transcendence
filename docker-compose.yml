version: "3"
services:
  nginx:
    restart: always
    container_name: nginx
    build:
      context: ./nginx
    networks:
      - mynetwork
    ports:
      - "8022:8022"
      - "4433:4433"
    depends_on:
      - frontend
      - backend

  frontend:
    restart: always
    container_name: frontend
    build:
      context: ./frontend/build-tools
    networks:
      - mynetwork
    volumes:
      - frontend_volume:/var/www/html
    depends_on:
      - backend


  backend:
    restart: always
    container_name: backend
    build:
      context: ./backend/build-tools
    command: ["python3", "manage.py", "runserver", "0.0.0.0:8000"]
    networks:
      - mynetwork
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - backend_volume:/var/app
    depends_on:
      - db
      - redis

  redis:
    restart: always
    container_name: redis
    build:
      context: ./redis
    networks:
      - mynetwork

  db:
    image: postgres
    restart: always
    shm_size: 128mb
    networks:
      - mynetwork
    volumes:
      - db_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456

  adminer:
    image: adminer
    restart: always
    networks:
      - mynetwork
    depends_on:
      - db

volumes:
  backend_volume:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "${PWD}/backend/"

  frontend_volume:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "${PWD}/frontend/"
  db_volume:

networks:
  mynetwork:
    driver: bridge